// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ExamStatus {
  DRAFT
  PUBLISHED
  COMPLETED
}

enum UserRole {
  STUDENT
  TEACHER
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  role      UserRole @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  exams     Exam[]
}

model Exam {
  id          String        @id @default(uuid())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime
  examCode    String        @unique
  passKey     String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userId      String
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  questions   Question[]
  sessions    ExamSession[]
  status      ExamStatus    @default(DRAFT)
}

model Question {
  id           String       @id @default(uuid())
  text         String
  questionType String
  options      Json?
  points       Int          @default(1)
  examId       String
  exam         Exam         @relation(fields: [examId], references: [id], onDelete: Cascade)
  attachments  Attachment[]
}

model ExamSession {
  id        String    @id @default(uuid())
  startTime DateTime  @default(now())
  endTime   DateTime?
  status    String
  score     Float?
  examId    String
  exam      Exam      @relation(fields: [examId], references: [id])
}

model Attachment {
  id         String    @id @default(uuid())
  url        String
  fileName   String
  mimeType   String
  size       Int
  examId     String
  Question   Question? @relation(fields: [questionId], references: [id])
  questionId String?
}
